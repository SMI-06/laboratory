	 --------------------
	| Sign Up Table: |
	 --------------------
create table signup(
    id INT(5) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT PRIMARY KEY,
    userName VARCHAR(20) NOT NULL,
    userEmail VARCHAR(50) NOT NULL UNIQUE,
    userFullName VARCHAR(50),
    userimage VARCHAR(50),
    userCNIC VARCHAR(20) NOT NULL,
    userPhone VARCHAR(15) NOT NULL,
    userReligion VARCHAR(20),
    userGender VARCHAR(10),
    userCity VARCHAR(30),
    userCountry VARCHAR(30),
    userAddress VARCHAR(50),
    userPassword VARCHAR(70) NOT NULL,
    Role VARCHAR(15) DEFAULT 'User'
);

	 ----------------------
	| Countries Table: |
	 ----------------------

CREATE table countries(
id int(5) ZEROFILL PRIMARY KEY AUTO_INCREMENT,
country_Name varchar(20) UNIQUE,
regions_id int(5) ZEROFILL,
FOREIGN KEY(regions_id) REFERENCES regions(id)    
);

	 ----------------------
	| Province Table: |
	 ----------------------

Create table province(
id int(5) ZEROFILL PRIMARY KEY AUTO_INCREMENT,
province_Name varchar(30),
Country_Id int(5) ZEROFILL,
FOREIGN KEY (Country_Id) REFERENCES countries(id)
);


	 ----------------
	| Cities 	Table: |
	 ----------------

create TABLE cities(
id int(5) ZEROFILL PRIMARY KEY AUTO_INCREMENT,
city_Name varchar(30),
Province_Id int(5) ZEROFILL,
FOREIGN KEY (province_Id) REFERENCES province(id), 
Country_Id int(5) ZEROFILL,
FOREIGN KEY (Country_Id) REFERENCES countries(id) 
)

	 --------------------
	| Regions Table: |
	 --------------------

CREATE table Regions(
id int(5) ZEROFILL PRIMARY KEY AUTO_INCREMENT,
Region_Name varchar(50)    
)

	 ------------------------------
	| LaboratoryType Table: |
	 ------------------------------

	create table laboratoryType( 
	id int(5) ZEROFILL AUTO_INCREMENT PRIMARY key, 
	Laboratory_Type varchar(50) 
	);


	 ------------------------
	| Laboratory Table: |
	 ------------------------


create table laboratory(
laboratory_id int(5) ZEROFILL AUTO_INCREMENT PRIMARY KEY,
laboratory_name varchar(50) unique,
laboratory_address varchar(50),
laboratory_type int(5) ZEROFILL,    
laboratory_city int(5) ZEROFILL,
laboratory_country int(5) ZEROFILL,
FOREIGN KEY(laboratory_type) REFERENCES laboratorytype(laboratorytype_id),
FOREIGN KEY(laboratory_city) REFERENCES cities(id),
FOREIGN KEY(laboratory_country) REFERENCES countries(Country_Id)    
)


	 -----------------
	| Mails Table: |
	 -----------------


create table mails(
mail_id int(5) ZEROFILL PRIMARY KEY AUTO_INCREMENT,
recipient  varchar(50),
subject varchar(50),
`Message` varchar(255),
userId int(5) ZEROFILL,
FOREIGN key (userId) REFERENCES signup(id)    
)


	 --------------------
	| Product Table: |
	 ---------------------



CREATE TABLE products (
    id INT(5) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT PRIMARY KEY,
    productName VARCHAR(30),
    productCategory VARCHAR(30),
    productDescription VARCHAR(255) NOT NULL,
    productPrice VARCHAR(30),
    productImage VARCHAR(50),
    user_id int(5) ZEROFILL,
    FOREIGN KEY(user_id) REFERENCES signup(id),
    `status` varchar(20) DEFAULT "Pending"
);

	 -------------------------------
	| Testing_product Table: |
	 -------------------------------

create table testing_product(
id int(5) ZEROFILL AUTO_INCREMENT PRIMARY KEY,
productName varchar(25),
productCetagory varchar(25),
productdescription varchar(25),
productImage varchar(30),
productPrice varchar(30),
laboratoryType int(5) ZEROFILL,
FOREIGN KEY(laboratoryType) REFERENCES laboratorytype(laboratorytype_id),
laboratory int(5) ZEROFILL,
FOREIGN KEY(laboratory) REFERENCES laboratory(laboratory_id),
user_id int(5) ZEROFILL,
FOREIGN KEY(user_id) REFERENCES signup(id),
`status` varchar(20) DEFAULT "Pending"
)


	 ----------------------
	| relations  Table: |
	 ----------------------


CREATE table relations(
Relation_id int(5) ZEROFILL PRIMARY KEY AUTO_INCREMENT,
laboratory_id int(5) ZEROFILL,
FOREIGN KEY(laboratory_id) REFERENCES laboratory(laboratory_id),
Tester_id int(5) ZEROFILL,
FOREIGN KEY(Tester_id) REFERENCES signup(id)
)



	 ----------------------------------------
	| Sign Up Table FOR TESTER: |
	 ----------------------------------------


create table signup_Tester(
    TesterId INT(5) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT PRIMARY KEY,
    TesterName VARCHAR(20) NOT NULL,
    TesterEmail VARCHAR(50) NOT NULL UNIQUE,
    TesterFullName VARCHAR(50),
    Testerimage VARCHAR(50),
    TesterCNIC VARCHAR(20) NOT NULL,
    TesterPhone VARCHAR(15) NOT NULL,
    TesterReligion VARCHAR(20),
    TesterGender VARCHAR(10),
    TesterCity VARCHAR(30),
    TesterCountry VARCHAR(30),
    TesterAddress VARCHAR(50),
    TesterPassword VARCHAR(70) NOT NULL,
    Role VARCHAR(15) DEFAULT 'Tester',
    Admin_Id int(5) ZEROFILL,
    FOREIGN KEY(Admin_Id) REFERENCES signup(id),
    Laboratory_Id int(5) ZEROFILL,
    FOREIGN KEY(Laboratory_Id) REFERENCES laboratory(laboratory_id)
);

	 ----------------------------------------------------
	| Table FOR LabAndUser Relation Table |
	 ----------------------------------------------------

create table LabAndUser(
Id int(5) ZEROFILL AUTO_INCREMENT PRIMARY KEY,
User_Role varchar(10) DEFAULT "Role",    
User_Id int(5) ZEROFILL,
FOREIGN key (User_Id) REFERENCES signup(id),
Laboratory_Id int(5) ZEROFILL,
FOREIGN KEY(Laboratory_Id) REFERENCES  laboratory(laboratory_id)    
)

	 ------------------------
	| Notification Table |
	 ------------------------


CREATE TABLE notification(
Id int(5) ZEROFILL AUTO_INCREMENT PRIMARY KEY,
Topic varchar(50),
User_Id int(5) ZEROFILL,
FOREIGN KEY(User_Id) REFERENCES signup(Id),
notificationTime Time,
notificationdate Date    
)























////////////////////////// ------------------------- Trigger  ----------------------------------\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

DELIMITER //
CREATE TRIGGER noti
After INSERT ON products 
FOR EACH ROW
BEGIN
    INSERT INTO notification(Topic, User_Id, laboratory_Id, notificationTime, notificationdate)
    VALUES (NEW.productName, NEW.user_id, NEW.lab_id, CURRENT_TIME, CURRENT_DATE);
END //

DELIMITER ;

////////////////////////// ------------------------- Foreign KEY  ----------------------------------\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

ALTER table products
Add CONSTRAINT lab_id FOREIGN KEY(lab_id) REFERENCES laboratory(laboratory_id);
